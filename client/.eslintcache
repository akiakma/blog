[{"/Users/hyunjunkim/Documents/Blog/client/src/index.js":"1","/Users/hyunjunkim/Documents/Blog/client/src/App.js":"2","/Users/hyunjunkim/Documents/Blog/client/src/store.js":"3","/Users/hyunjunkim/Documents/Blog/client/src/redux/reducers/index.js":"4","/Users/hyunjunkim/Documents/Blog/client/src/redux/sagas/index.js":"5","/Users/hyunjunkim/Documents/Blog/client/src/routes/Router.js":"6","/Users/hyunjunkim/Documents/Blog/client/src/components/Footer.js":"7","/Users/hyunjunkim/Documents/Blog/client/src/components/Header.js":"8","/Users/hyunjunkim/Documents/Blog/client/src/components/AppNavbar.js":"9","/Users/hyunjunkim/Documents/Blog/client/src/redux/sagas/authSaga.js":"10","/Users/hyunjunkim/Documents/Blog/client/src/redux/types.js":"11","/Users/hyunjunkim/Documents/Blog/client/src/redux/reducers/authReducer.js":"12","/Users/hyunjunkim/Documents/Blog/client/src/components/auth/LoginModal.js":"13","/Users/hyunjunkim/Documents/Blog/client/src/components/auth/RegisterModal.js":"14","/Users/hyunjunkim/Documents/Blog/client/src/components/auth/loadUser.js":"15","/Users/hyunjunkim/Documents/Blog/client/src/routes/normalRoute/PostCardList.js":"16","/Users/hyunjunkim/Documents/Blog/client/src/routes/normalRoute/PostWrite.js":"17","/Users/hyunjunkim/Documents/Blog/client/src/routes/normalRoute/PostDetail.js":"18","/Users/hyunjunkim/Documents/Blog/client/src/routes/normalRoute/Search.js":"19","/Users/hyunjunkim/Documents/Blog/client/src/routes/normalRoute/CategoryResult.js":"20","/Users/hyunjunkim/Documents/Blog/client/src/redux/reducers/postReducer.js":"21","/Users/hyunjunkim/Documents/Blog/client/src/redux/sagas/postSaga.js":"22","/Users/hyunjunkim/Documents/Blog/client/src/components/spinner/Spinner.js":"23","/Users/hyunjunkim/Documents/Blog/client/src/components/post/PostCardOne.js":"24","/Users/hyunjunkim/Documents/Blog/client/src/components/editor/EditorConfig.js":"25","/Users/hyunjunkim/Documents/Blog/client/src/components/editor/UploadAdapter.js":"26","/Users/hyunjunkim/Documents/Blog/client/src/redux/reducers/CommentReducer.js":"27","/Users/hyunjunkim/Documents/Blog/client/src/redux/sagas/commentSaga.js":"28","/Users/hyunjunkim/Documents/Blog/client/src/components/comments/Comments.js":"29","/Users/hyunjunkim/Documents/Blog/client/src/routes/protectedRoute/ProtectedRoute.js":"30","/Users/hyunjunkim/Documents/Blog/client/src/routes/normalRoute/Profile.js":"31","/Users/hyunjunkim/Documents/Blog/client/src/routes/normalRoute/PostEdit.js":"32","/Users/hyunjunkim/Documents/Blog/client/src/components/post/Category.js":"33","/Users/hyunjunkim/Documents/Blog/client/src/components/search/searchInput.js":"34","/Users/hyunjunkim/Documents/Blog/client/src/routes/Board.js":"35","/Users/hyunjunkim/Documents/Blog/client/src/components/Appnav.js":"36","/Users/hyunjunkim/Documents/Blog/client/src/routes/normalRoute/Home.js":"37","/Users/hyunjunkim/Documents/Blog/client/src/components/AppNav.js":"38","/Users/hyunjunkim/Documents/Blog/client/src/components/spinner/LoadingSpinner.js":"39","/Users/hyunjunkim/Documents/Blog/client/src/Api/api.js":"40","/Users/hyunjunkim/Documents/Blog/client/src/redux/reducers/realtimeReducer.js":"41","/Users/hyunjunkim/Documents/Blog/client/src/redux/sagas/realtimeSaga.js":"42","/Users/hyunjunkim/Documents/Blog/client/src/routes/normalRoute/News.js":"43","/Users/hyunjunkim/Documents/Blog/client/src/routes/normalRoute/Chart.js":"44","/Users/hyunjunkim/Documents/Blog/client/src/routes/normalRoute/ChartCoinList.js":"45","/Users/hyunjunkim/Documents/Blog/client/src/routes/normalRoute/ChartCoinMarketCap.js":"46"},{"size":437,"mtime":1613495742993,"results":"47","hashOfConfig":"48"},{"size":474,"mtime":1613495075208,"results":"49","hashOfConfig":"48"},{"size":1238,"mtime":1612714590851,"results":"50","hashOfConfig":"48"},{"size":536,"mtime":1612768539712,"results":"51","hashOfConfig":"48"},{"size":516,"mtime":1612834399200,"results":"52","hashOfConfig":"48"},{"size":3925,"mtime":1613490353991,"results":"53","hashOfConfig":"48"},{"size":1350,"mtime":1613490206980,"results":"54","hashOfConfig":"48"},{"size":396,"mtime":1612247396597,"results":"55","hashOfConfig":"48"},{"size":4043,"mtime":1612603630959,"results":"56","hashOfConfig":"48"},{"size":4683,"mtime":1612718213727,"results":"57","hashOfConfig":"48"},{"size":4483,"mtime":1613472778193,"results":"58","hashOfConfig":"48"},{"size":4190,"mtime":1612769312902,"results":"59","hashOfConfig":"48"},{"size":3050,"mtime":1612718214008,"results":"60","hashOfConfig":"48"},{"size":3262,"mtime":1612268794182,"results":"61","hashOfConfig":"48"},{"size":333,"mtime":1612612102163,"results":"62","hashOfConfig":"48"},{"size":1021,"mtime":1612631661448,"results":"63","hashOfConfig":"48"},{"size":4937,"mtime":1612935188272,"results":"64","hashOfConfig":"48"},{"size":6493,"mtime":1612691049975,"results":"65","hashOfConfig":"48"},{"size":919,"mtime":1612450706415,"results":"66","hashOfConfig":"48"},{"size":1094,"mtime":1612690823667,"results":"67","hashOfConfig":"48"},{"size":4810,"mtime":1612509227488,"results":"68","hashOfConfig":"48"},{"size":7222,"mtime":1612642297517,"results":"69","hashOfConfig":"48"},{"size":248,"mtime":1612632798170,"results":"70","hashOfConfig":"48"},{"size":4055,"mtime":1612634943362,"results":"71","hashOfConfig":"48"},{"size":5435,"mtime":1612366889223,"results":"72","hashOfConfig":"48"},{"size":4120,"mtime":1612367607238,"results":"73","hashOfConfig":"48"},{"size":1431,"mtime":1612438732026,"results":"74","hashOfConfig":"48"},{"size":1903,"mtime":1612438701724,"results":"75","hashOfConfig":"48"},{"size":2309,"mtime":1612438769447,"results":"76","hashOfConfig":"48"},{"size":1733,"mtime":1612466174129,"results":"77","hashOfConfig":"48"},{"size":4636,"mtime":1612465532228,"results":"78","hashOfConfig":"48"},{"size":5595,"mtime":1612641821909,"results":"79","hashOfConfig":"48"},{"size":723,"mtime":1612630639856,"results":"80","hashOfConfig":"48"},{"size":1688,"mtime":1612548765704,"results":"81","hashOfConfig":"48"},{"size":2406,"mtime":1612599157069,"results":"82","hashOfConfig":"48"},{"size":5482,"mtime":1612627690272,"results":"83","hashOfConfig":"48"},{"size":140,"mtime":1613585617544,"results":"84","hashOfConfig":"48"},{"size":6631,"mtime":1613585834872,"results":"85","hashOfConfig":"48"},{"size":241,"mtime":1612631609394,"results":"86","hashOfConfig":"48"},{"size":2519,"mtime":1612700721499,"results":"87","hashOfConfig":"48"},{"size":2920,"mtime":1613474457850,"results":"88","hashOfConfig":"48"},{"size":5499,"mtime":1613553370044,"results":"89","hashOfConfig":"48"},{"size":103,"mtime":1612865705907,"results":"90","hashOfConfig":"48"},{"size":6161,"mtime":1613582703040,"results":"91","hashOfConfig":"48"},{"size":1993,"mtime":1613469163980,"results":"92","hashOfConfig":"48"},{"size":2553,"mtime":1613572951029,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"97"},"m8lkpm",{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"97"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"97"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"97"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"97"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"97"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"97"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"97"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"97"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"97"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"97"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"97"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"116"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"97"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"97"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"97"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"97"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"97"},"/Users/hyunjunkim/Documents/Blog/client/src/index.js",["206"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport loadUser from \"./components/auth/loadUser\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./assets/custom.scss\";\nimport \"antd/dist/antd.css\";\nimport { coinApi } from \"./Api/api\";\n\n// const upbit = coinApi.getOneCoinTradeLists(\"KRW-BTC\");\n\n// console.log(upbit);\n\nloadUser();\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n",["207","208"],"/Users/hyunjunkim/Documents/Blog/client/src/App.js",["209","210","211"],"import React, { useEffect } from \"react\";\nimport { Provider, useDispatch, useSelector } from \"react-redux\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport store, { history } from \"./store\";\nimport MyRouter from \"./routes/Router\";\n\nconst App = () => {\n    return (\n        <Provider store={store}>\n            <ConnectedRouter history={history}>\n                <MyRouter />\n            </ConnectedRouter>\n        </Provider>\n    );\n};\n\nexport default App;\n","/Users/hyunjunkim/Documents/Blog/client/src/store.js",["212"],"import { createStore, compose, applyMiddleware } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { createBrowserHistory } from \"history\";\nimport { routerMiddleware } from \"connected-react-router\";\n\nimport createRootReducer from \"./redux/reducers/index\";\nimport rootSaga from \"./redux/sagas\";\n\nexport const history = createBrowserHistory();\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst initialState = {};\n\nconst middlewares = [sagaMiddleware, routerMiddleware(history)];\nconst devtools = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\n\nconst composeEnhancer =\n    process.env.NODE_ENV === \"production\" ? compose : devtools || compose;\n\nconst store = createStore(\n    createRootReducer(history),\n    initialState,\n    composeEnhancer(applyMiddleware(...middlewares))\n);\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n\n{\n    /*\nConnectedReactRouter: 리덕스에서 주소를 변경 및 확인하기 위해 history 객체를 관리하며 필요에 의해 꺼낼 쓸 수 있는 라이브러리.\n단방향 흐름을 통해 리덕스에서 rotuer상태를 동기화 할 수 있다 (history객체 -> store -> router -> component)\nredux-saga를 통해 히스토리 객체를 디스패치 할 수 있다.\n\n\n\n*/\n}\n","/Users/hyunjunkim/Documents/Blog/client/src/redux/reducers/index.js",[],"/Users/hyunjunkim/Documents/Blog/client/src/redux/sagas/index.js",[],"/Users/hyunjunkim/Documents/Blog/client/src/routes/Router.js",["213","214","215","216","217","218","219","220"],"import React, { Fragment, useCallback, useEffect, useState } from \"react\";\n// import Header from \"../components/Header\";\nimport FooterComponent from \"../components/Footer\";\nimport AppNavbar from \"../components/AppNavbar\";\n// import { Container } from \"reactstrap\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport PostCardList from \"./normalRoute/PostCardList\";\nimport PostWrite from \"./normalRoute/PostWrite\";\nimport PostDetail from \"./normalRoute/PostDetail\";\nimport Search from \"./normalRoute/Search\";\nimport PostEdit from \"./normalRoute/PostEdit\";\nimport CategoryResult from \"./normalRoute/CategoryResult\";\nimport Profile from \"./normalRoute/Profile\";\nimport Home from \"./normalRoute/Home\";\nimport {\n    EditProtectedRoute,\n    ProfileProtectedRoute,\n} from \"./protectedRoute/ProtectedRoute\";\nimport { Layout, Menu, Breadcrumb, Tag } from \"antd\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { GET_REAL_TIME_DATA_REQUEST, LOGOUT_REQUEST } from \"../redux/types\";\n\nimport Appnav from \"../components/AppNav\";\nimport News from \"./normalRoute/News\";\nimport Chart from \"./normalRoute/Chart\";\n\nconst MyRouter = () => {\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch({\n            type: GET_REAL_TIME_DATA_REQUEST,\n        });\n    }, []);\n\n    const { Content, Footer } = Layout;\n    //\n    const [isOpen, setIsOpen] = useState(false);\n    const { user } = useSelector(state => state.auth);\n    // console.log(userRole, \"UserRole\");\n\n    const onLogout = useCallback(() => {\n        dispatch({\n            type: LOGOUT_REQUEST,\n        });\n    }, [dispatch]);\n\n    useEffect(() => {\n        setIsOpen(false);\n    }, [user]);\n\n    return (\n        <Switch>\n            <Layout className=\"layout\" style={{ backgroundColor: \"black\" }}>\n                <Appnav />\n                <Content style={{ padding: \"0 50px\" }}>\n                    <Breadcrumb style={{ margin: \"16px 0\" }}></Breadcrumb>\n                    <div className=\"site-layout-content\">\n                        <Switch>\n                            <Route path=\"/\" exact component={Home} />\n                            <Route path=\"/news\" exact component={News} />\n                            <Route\n                                path=\"/board\"\n                                exact\n                                component={PostCardList}\n                            />\n                            <Route path=\"/chart\" exact component={Chart} />\n                            <Route path=\"/post\" exact component={PostWrite} />\n                            <Route\n                                path=\"/board/post/:id\"\n                                exact\n                                component={PostDetail}\n                            />\n                            <EditProtectedRoute\n                                path=\"/post/:id/edit\"\n                                exact\n                                component={PostEdit}\n                            />\n                            <Route\n                                path=\"/board/category/:categoryName\"\n                                exact\n                                component={CategoryResult}\n                            />\n                            <Route\n                                path=\"/search/:searchTerm\"\n                                exact\n                                component={Search}\n                            />\n                            <ProfileProtectedRoute\n                                path=\"/user/:userName/profile\"\n                                exact\n                                component={Profile}\n                            />\n                            <Redirect from=\"*\" to=\"/\" />\n                        </Switch>\n                    </div>\n                </Content>\n                <FooterComponent />\n            </Layout>\n        </Switch>\n    );\n};\n\nexport default MyRouter;\n","/Users/hyunjunkim/Documents/Blog/client/src/components/Footer.js",["221"],"import React from \"react\";\nimport { Layout, Tag } from \"antd\";\nimport {\n    TwitterOutlined,\n    YoutubeOutlined,\n    FacebookOutlined,\n    LinkedinOutlined,\n} from \"@ant-design/icons\";\nconst Footer = () => {\n    const { Footer } = Layout;\n\n    return (\n        <>\n            <Footer\n                style={{\n                    textAlign: \"center\",\n                    backgroundColor: \"black\",\n                    color: \"whiteSmoke\",\n                }}\n            >\n                <Tag icon={<TwitterOutlined />} color=\"#55acee\">\n                    <a href=\"https://twitter.com/wang_crypto\" target=\"_blank\">\n                        Twitter\n                    </a>\n                </Tag>\n                <Tag icon={<YoutubeOutlined />} color=\"#cd201f\">\n                    Youtube\n                </Tag>\n                <Tag icon={<FacebookOutlined />} color=\"#3b5999\">\n                    Facebook\n                </Tag>\n                <Tag icon={<LinkedinOutlined />} color=\"#55acee\">\n                    LinkedIn\n                </Tag>\n                <div>\n                    <br />\n                    <strong>Akiakmapro@gmail.com</strong>\n                    <br />\n                    Copyright ©2021 Austin Hyunjun Kim | All Rights Reserved\n                </div>\n            </Footer>\n        </>\n    );\n};\n\nexport default Footer;\n","/Users/hyunjunkim/Documents/Blog/client/src/components/Header.js",[],["222","223"],"/Users/hyunjunkim/Documents/Blog/client/src/components/AppNavbar.js",["224","225","226","227","228","229","230","231","232","233"],"import React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport {\n    Container,\n    Navbar,\n    NavbarToggler,\n    Collapse,\n    Nav,\n    NavItem,\n    Form,\n    Button,\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport LoginModal from \"./auth/LoginModal\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { LOGOUT_REQUEST } from \"../redux/types\";\nimport RegisterModal from \"./auth/RegisterModal\";\nimport SearchInput from \"./search/searchInput\";\n\nconst AppNavbar = () => {\n    const [isOpen, setIsOpen] = useState(false);\n    const { isAuthenticated, user, userRole } = useSelector(\n        state => state.auth\n    );\n    // console.log(userRole, \"UserRole\");\n    const dispatch = useDispatch();\n\n    const onLogout = useCallback(() => {\n        dispatch({\n            type: LOGOUT_REQUEST,\n        });\n    }, [dispatch]);\n\n    useEffect(() => {\n        setIsOpen(false);\n    }, [user]);\n\n    const handleToggle = () => {\n        setIsOpen(!isOpen);\n    };\n\n    const addPostClick = () => {};\n\n    const authLink = (\n        <Fragment>\n            <NavItem>\n                {userRole === \"MainJuin\" ? (\n                    <Form className=\"col mt-2\">\n                        <Link\n                            to=\"/post\"\n                            className=\"btn btn-success block text-white px-3\"\n                            onClick={addPostClick}\n                        >\n                            Add Post\n                        </Link>\n                    </Form>\n                ) : (\n                    \"\"\n                )}\n            </NavItem>\n            <NavItem className=\"d-flex justify-content-center\">\n                <Form className=\"col mt-2\">\n                    {user && user.name ? (\n                        <Link to={`/user/${user.name}/profile`}>\n                            <Button\n                                outline\n                                color=\"light\"\n                                className=\"px-3\"\n                                block\n                            >\n                                <strong>\n                                    {user ? `Welcome ${user.name}` : \"\"}\n                                </strong>\n                            </Button>\n                        </Link>\n                    ) : (\n                        <Button outline color=\"light\" className=\"px-3\" block>\n                            <strong>No User</strong>\n                        </Button>\n                    )}\n                </Form>\n            </NavItem>\n            <NavItem>\n                <Form className=\"col\">\n                    <Link onClick={onLogout} to=\"#\" className=\"\">\n                        <Button outline color=\"light\" className=\"mt-2\" block>\n                            Logout\n                        </Button>\n                    </Link>\n                </Form>\n            </NavItem>\n        </Fragment>\n    );\n\n    const guestLink = (\n        <Fragment>\n            <NavItem>\n                <RegisterModal />\n            </NavItem>\n            <NavItem>\n                <LoginModal />\n            </NavItem>\n        </Fragment>\n    );\n\n    return (\n        // <Fragment>\n        //     <Navbar id=\"app-navbar\" expand=\"lg\" className=\"sticky-top\">\n        //         <Container>\n        //             <Link to=\"/\" className=\"text-white text-decoration-none\">\n        //                 기술블로그\n        //             </Link>\n        //             <NavbarToggler onClick={handleToggle} />\n        //             <Collapse isOpen={isOpen} navbar>\n        //                 <SearchInput isOpen={isOpen} />\n        //                 <Nav\n        //                     className=\"ml-auto d-flex justify-content-around\"\n        //                     navbar\n        //                 >\n        //                     {isAuthenticated ? authLink : guestLink}\n        //                 </Nav>\n        //             </Collapse>\n        //         </Container>\n        //     </Navbar>\n        // </Fragment>\n        <></>\n    );\n};\n\nexport default AppNavbar;\n","/Users/hyunjunkim/Documents/Blog/client/src/redux/sagas/authSaga.js",[],"/Users/hyunjunkim/Documents/Blog/client/src/redux/types.js",[],"/Users/hyunjunkim/Documents/Blog/client/src/redux/reducers/authReducer.js",[],"/Users/hyunjunkim/Documents/Blog/client/src/components/auth/LoginModal.js",["234","235","236"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n    NavLink,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    Alert,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    Button,\n} from \"reactstrap\";\nimport {} from \"reactstrap\";\nimport { CLEAR_ERROR_REQUEST, LOGIN_REQUEST } from \"../../redux/types\";\nimport { Layout, Menu } from \"antd\";\n\nconst LoginModal = () => {\n    const [modal, setModal] = useState(false);\n    const [localMsg, setLocalMsg] = useState(\"\");\n    const [form, setValues] = useState({\n        email: \"\",\n        password: \"\",\n    });\n    const dispatch = useDispatch();\n    const { errorMsg } = useSelector(state => state.auth);\n\n    useEffect(() => {\n        try {\n            console.log(\"zz\");\n        } catch (e) {\n            console.log(e);\n        }\n    }, [errorMsg]);\n\n    const handleToggle = () => {\n        dispatch({\n            type: CLEAR_ERROR_REQUEST,\n        });\n        setModal(!modal);\n    };\n\n    const onChange = e => {\n        setValues({\n            ...form,\n            [e.target.name]: e.target.value,\n        });\n    };\n\n    const onSubmit = e => {\n        e.preventDefault();\n        const { email, password } = form;\n        const user = { email, password };\n        console.log(user);\n        dispatch({\n            type: LOGIN_REQUEST,\n            payload: user,\n        });\n    };\n\n    return (\n        <div>\n            <NavLink onClick={handleToggle} href=\"#\">\n                Login\n            </NavLink>\n            <Modal isOpen={modal} toggle={handleToggle}>\n                <ModalHeader toggle={handleToggle}> Login</ModalHeader>\n                <ModalBody>\n                    {localMsg ? <Alert color=\"danger\">{localMsg}</Alert> : null}\n                    <Form onSubmit={onSubmit}>\n                        <FormGroup>\n                            <Label for=\"email\">Email</Label>\n                            <Input\n                                type=\"email\"\n                                name=\"email\"\n                                id=\"email\"\n                                placeholder=\"Email\"\n                                onChange={onChange}\n                            />\n                            <Label for=\"password\">Password</Label>\n                            <Input\n                                type=\"password\"\n                                name=\"password\"\n                                id=\"password\"\n                                placeholder=\"Password\"\n                                onChange={onChange}\n                            />\n                            <Button\n                                color=\"dark\"\n                                style={{ marginTop: \"2rem\" }}\n                                block\n                            >\n                                로그인\n                            </Button>\n                        </FormGroup>\n                    </Form>\n                </ModalBody>\n            </Modal>\n        </div>\n    );\n};\n\nexport default LoginModal;\n","/Users/hyunjunkim/Documents/Blog/client/src/components/auth/RegisterModal.js",[],"/Users/hyunjunkim/Documents/Blog/client/src/components/auth/loadUser.js",[],"/Users/hyunjunkim/Documents/Blog/client/src/routes/normalRoute/PostCardList.js",[],"/Users/hyunjunkim/Documents/Blog/client/src/routes/normalRoute/PostWrite.js",[],"/Users/hyunjunkim/Documents/Blog/client/src/routes/normalRoute/PostDetail.js",["237","238","239","240","241","242","243","244","245","246","247","248"],"import React, { useEffect, Fragment } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Helmet } from \"react-helmet\";\nimport {\n    POST_DETAIL_LOADING_REQUEST,\n    POST_DELETE_REQUEST,\n    USER_LOADING_REQUEST,\n} from \"../../redux/types\";\nimport { Row, Col, Container } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\nimport GrowingSpinner from \"../../components/spinner/Spinner\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n    faPencilAlt,\n    faCommentDots,\n    faMouse,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport BalloonEditor from \"@ckeditor/ckeditor5-editor-balloon/src/ballooneditor\";\nimport { editorConfiguration } from \"../../components/editor/EditorConfig\";\nimport Comments from \"../../components/comments/Comments\";\nimport { Button, Menu, Dropdown } from \"antd\";\n// import { EditOutlined } from \"@ant-design/icons\";\nconst PostDetail = req => {\n    const dispatch = useDispatch();\n    const { postDetail, creatorId, title, loading } = useSelector(\n        state => state.post\n    );\n\n    const { userId, userName } = useSelector(state => state.auth);\n    const { comments } = useSelector(state => state.comment);\n    useEffect(() => {\n        dispatch({\n            type: POST_DETAIL_LOADING_REQUEST,\n            payload: req.match.params.id,\n        });\n        dispatch({\n            type: USER_LOADING_REQUEST,\n            payload: localStorage.getItem(\"token\"),\n        });\n    }, [dispatch, req.match.params.id]);\n\n    const onDeleteClick = () => {\n        dispatch({\n            type: POST_DELETE_REQUEST,\n            payload: {\n                id: req.match.params.id,\n                token: localStorage.getItem(\"token\"),\n            },\n        });\n    };\n    const menu = (\n        <Menu>\n            <Menu.Item key=\"1\">\n                <Link to={`/post/${req.match.params.id}/edit`}>Edit</Link>\n            </Menu.Item>\n            <Menu.Item key=\"2\" onClick={onDeleteClick}>\n                Delete\n            </Menu.Item>\n        </Menu>\n    );\n\n    const Body = (\n        <>\n            <Row className=\"border-bottom border-top border-black p-3 mb-5 d-flex justify-content-between\">\n                {(() => {\n                    if (postDetail && postDetail.creator) {\n                        return (\n                            <Fragment>\n                                <div className=\"font-weight-bold text-big\">\n                                    <span className=\"mr-3\">\n                                        <button disabled>\n                                            {postDetail.category.categoryName}\n                                        </button>\n                                    </span>\n                                    {postDetail.title}\n                                </div>\n                                <div className=\"align-self-end\">\n                                    <Dropdown.Button overlay={menu}>\n                                        <strong>\n                                            {postDetail.creator.name}\n                                        </strong>\n                                    </Dropdown.Button>\n                                </div>\n                            </Fragment>\n                        );\n                    }\n                })()}\n            </Row>\n            {postDetail ? (\n                <Fragment>\n                    <div className=\"d-flex justify-content-end align-items-baseline small\">\n                        &nbsp;\n                        <span>{postDetail.date}</span>\n                        &nbsp;&nbsp;\n                        {/* <span>{postDetail.comments.length}</span> */}\n                        &nbsp;&nbsp;\n                        <span>{postDetail.views}</span>\n                    </div>\n                    <Row className=\"mb-3\">\n                        <CKEditor\n                            editor={BalloonEditor}\n                            data={postDetail.contents}\n                            config={editorConfiguration}\n                            disabled=\"true\"\n                        />\n                    </Row>\n                    <Row>안녕?</Row>\n                    {/* <Row>\n                        <Container className=\"mb-3 border border-blue rounded\">\n                            {Array.isArray(comments)\n                                ? comments.map(\n                                      ({\n                                          contents,\n                                          creator,\n                                          date,\n                                          _id,\n                                          creatorName,\n                                      }) => (\n                                          <div key={_id}>\n                                              <Row className=\"justify-content-between p-2\">\n                                                  <div className=\"font-weight-bold\">\n                                                      {creatorName\n                                                          ? creatorName\n                                                          : creator}\n                                                  </div>\n                                                  <div className=\"text-small\">\n                                                      {date}\n                                                  </div>\n                                              </Row>\n                                              <Row className=\"p-2\">\n                                                  <div>{contents}</div>\n                                              </Row>\n                                              <hr />\n                                          </div>\n                                      )\n                                  )\n                                : \"Creator\"}\n                            <Comments\n                                id={req.match.params.id}\n                                userId={userId}\n                                userName={userName}\n                            />\n                        </Container>\n                    </Row> */}\n                </Fragment>\n            ) : null}\n        </>\n    );\n\n    return (\n        <div>\n            <Helmet title={`Board | ${title}`} />\n            {loading === true ? GrowingSpinner : Body}\n        </div>\n    );\n};\n\nexport default PostDetail;\n","/Users/hyunjunkim/Documents/Blog/client/src/routes/normalRoute/Search.js",[],"/Users/hyunjunkim/Documents/Blog/client/src/routes/normalRoute/CategoryResult.js",[],"/Users/hyunjunkim/Documents/Blog/client/src/redux/reducers/postReducer.js",[],"/Users/hyunjunkim/Documents/Blog/client/src/redux/sagas/postSaga.js",[],"/Users/hyunjunkim/Documents/Blog/client/src/components/spinner/Spinner.js",["249","250"],"import React, { Fragment } from \"react\";\nimport { Row, Spinner } from \"reactstrap\";\nimport { Skeleton } from \"antd\";\nconst GrowingSpinner = (\n    <>\n        <Skeleton active />\n        <Skeleton active />\n    </>\n);\n\nexport default GrowingSpinner;\n","/Users/hyunjunkim/Documents/Blog/client/src/components/post/PostCardOne.js",["251","252","253"],"import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMouse } from \"@fortawesome/free-solid-svg-icons\";\nimport { Link } from \"react-router-dom\";\n// import {\n//     Badge,\n//     Button,\n//     Card,\n//     CardBody,\n//     CardImg,\n//     CardTitle,\n//     Row,\n// } from \"reactstrap\";\nimport { Timeline, Button } from \"antd\";\nconst PostCardOne = ({ posts }) => {\n    return (\n        <>\n            <Timeline\n                pending=\"work in progress...\"\n                reverse={true}\n                className=\"postCardTimeLine\"\n            >\n                {/* <Timeline.Item>Create a services site 2015-09-01</Timeline.Item> */}\n                {Array.isArray(posts)\n                    ? posts.map(post => {\n                          return (\n                              <Link\n                                  to={`/board/post/${post._id}`}\n                                  className=\"text-dark text-decoration-none\"\n                              >\n                                  <Timeline.Item>\n                                      <strong>{post.title}</strong>\n                                      &nbsp;&nbsp;\n                                      <span style={{ fontSize: \"0.4rem\" }}>\n                                          {post.date}\n                                      </span>\n                                  </Timeline.Item>\n                              </Link>\n                          );\n                      })\n                    : null}\n            </Timeline>\n\n            {/* {Array.isArray(posts)\n                ? posts.map(({ _id, title, fileUrl, comments, views }) => {\n                      return (\n                          <div key={_id} className=\"col-md-4\">\n                              <Link\n                                  to={`/board/post/${_id}`}\n                                  className=\"text-dark text-decoration-none\"\n                              >\n                                  <Card className=\"mb-3\">\n                                      <CardImg\n                                          top\n                                          alt=\"카드이미지\"\n                                          src={fileUrl}\n                                      />\n                                      <CardBody>\n                                          <CardTitle className=\"text-truncate d-flex justify-content-between\">\n                                              <span className=\"text-truncate\">\n                                                  {title}\n                                              </span>\n                                              <span>\n                                                  <FontAwesomeIcon\n                                                      icon={faMouse}\n                                                  />\n                                                  &nbsp;&nbsp;\n                                                  <span>{views}</span>\n                                              </span>\n                                          </CardTitle>\n                                          <Row>\n                                              <Button\n                                                  color=\"primary\"\n                                                  className=\"p-2 btn-block\"\n                                              >\n                                                  More\n                                                  <Badge color=\"light\">\n                                                      {comments.length}\n                                                  </Badge>\n                                              </Button>\n                                          </Row>\n                                      </CardBody>\n                                  </Card>\n                              </Link>\n                          </div>\n                      );\n                  })\n                : null} */}\n        </>\n    );\n};\n\nexport default PostCardOne;\n","/Users/hyunjunkim/Documents/Blog/client/src/components/editor/EditorConfig.js",[],"/Users/hyunjunkim/Documents/Blog/client/src/components/editor/UploadAdapter.js",[],"/Users/hyunjunkim/Documents/Blog/client/src/redux/reducers/CommentReducer.js",[],"/Users/hyunjunkim/Documents/Blog/client/src/redux/sagas/commentSaga.js",[],"/Users/hyunjunkim/Documents/Blog/client/src/components/comments/Comments.js",[],"/Users/hyunjunkim/Documents/Blog/client/src/routes/protectedRoute/ProtectedRoute.js",[],"/Users/hyunjunkim/Documents/Blog/client/src/routes/normalRoute/Profile.js",[],"/Users/hyunjunkim/Documents/Blog/client/src/routes/normalRoute/PostEdit.js",[],"/Users/hyunjunkim/Documents/Blog/client/src/components/post/Category.js",["254","255","256"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Badge, Button } from \"reactstrap\";\n//\n\nimport { Tag } from \"antd\";\nconst { CheckableTag } = Tag;\n\nconst Category = ({ posts }) => {\n    return (\n        <>\n            <span style={{ marginRight: 8 }}>categories:</span>\n            {Array.isArray(posts)\n                ? posts.map(tag => (\n                      <CheckableTag key={tag._id}>\n                          <Link to={`/board/category/${tag.categoryName}`}>\n                              {tag.categoryName}\n                          </Link>\n                      </CheckableTag>\n                  ))\n                : null}\n        </>\n    );\n};\n\nexport default Category;\n","/Users/hyunjunkim/Documents/Blog/client/src/components/search/searchInput.js",["257","258","259"],"import React, { useState, useRef, Fragment } from \"react\";\n// import { Form, Input } from \"reactstrap\";\nimport { useDispatch } from \"react-redux\";\nimport { SEARCH_REQUEST } from \"../../redux/types\";\nimport { Input, Space } from \"antd\";\nimport { AudioOutlined } from \"@ant-design/icons\";\n\nconst SearchInput = () => {\n    const dispatch = useDispatch();\n    const [form, setValues] = useState({ searchBy: \"\" });\n\n    const onChange = e => {\n        setValues({\n            ...form,\n            [e.target.name]: e.target.value,\n        });\n        console.log(form);\n    };\n\n    const onSubmit = async e => {\n        await e.preventDefault();\n        const { searchBy } = form;\n\n        dispatch({\n            type: SEARCH_REQUEST,\n            payload: searchBy,\n        });\n\n        console.log(searchBy, \"Submit Body\");\n        resetValue.current.value = \"\";\n    };\n    const resetValue = useRef(null);\n\n    const { Search } = Input;\n\n    const suffix = (\n        <AudioOutlined\n            style={{\n                fontSize: 16,\n                color: \"#1890ff\",\n            }}\n        />\n    );\n\n    const onSearch = value => console.log(value);\n    return (\n        <Fragment>\n            <Space direction=\"vertical\">\n                <Search\n                    placeholder=\"\"\n                    onSearch={onSearch}\n                    style={{ width: 100 }}\n                />\n            </Space>\n            {/* <Form onSubmit={onSubmit}>\n                <Input\n                    name=\"searchBy\"\n                    onChange={onChange}\n                    innerRef={resetValue}\n                />\n            </Form> */}\n        </Fragment>\n    );\n};\n\nexport default SearchInput;\n","/Users/hyunjunkim/Documents/Blog/client/src/routes/Board.js",["260","261","262","263","264"],"import React from \"react\";\nimport { Layout, Menu, Breadcrumb } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n\nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\nimport AppNavbar from \"../components/AppNavbar\";\nimport PostCardList from \"./normalRoute/PostCardList\";\nimport PostWrite from \"./normalRoute/PostWrite\";\nimport PostDetail from \"./normalRoute/PostDetail\";\nimport Search from \"./normalRoute/Search\";\nimport PostEdit from \"./normalRoute/PostEdit\";\nimport CategoryResult from \"./normalRoute/CategoryResult\";\nimport Profile from \"./normalRoute/Profile\";\nimport {\n    EditProtectedRoute,\n    ProfileProtectedRoute,\n} from \"./protectedRoute/ProtectedRoute\";\nconst Board = () => {\n    const { Content } = Layout;\n    return (\n        <Content style={{ padding: \"0 50px\" }}>\n            <Breadcrumb style={{ margin: \"16px 0\" }}>\n                <Breadcrumb.Item>Home</Breadcrumb.Item>\n                <Breadcrumb.Item>List</Breadcrumb.Item>\n                <Breadcrumb.Item>App</Breadcrumb.Item>\n            </Breadcrumb>\n            <div className=\"site-layout-content\">\n                <Switch>\n                    <Route path=\"/\" exact component={PostCardList} />\n                    <Route path=\"/post\" exact component={PostWrite} />\n                    <Route\n                        path=\"/board/post/:id\"\n                        exact\n                        component={PostDetail}\n                    />\n                    <EditProtectedRoute\n                        path=\"/post/:id/edit\"\n                        exact\n                        component={PostEdit}\n                    />\n                    <Route\n                        path=\"/post/category/:categoryName\"\n                        exact\n                        component={CategoryResult}\n                    />\n                    <Route\n                        path=\"/search/:searchTerm\"\n                        exact\n                        component={Search}\n                    />\n                    <ProfileProtectedRoute\n                        path=\"/user/:userName/profile\"\n                        exact\n                        component={Profile}\n                    />\n                    <Redirect from=\"*\" to=\"/\" />\n                </Switch>\n            </div>\n        </Content>\n    );\n};\n\nexport default Board;\n","/Users/hyunjunkim/Documents/Blog/client/src/components/Appnav.js",["265","266","267","268"],"/Users/hyunjunkim/Documents/Blog/client/src/routes/normalRoute/Home.js",[],"/Users/hyunjunkim/Documents/Blog/client/src/components/AppNav.js",["269","270","271","272","273","274","275","276"],"/Users/hyunjunkim/Documents/Blog/client/src/components/spinner/LoadingSpinner.js",["277"],"import React from \"react\";\nimport { Spin, Alert } from \"antd\";\nconst LoadingSpinner = () => {\n    return (\n        <div className=\"LoadingSpinner\">\n            <Spin size={\"large\"} />\n        </div>\n    );\n};\n\nexport default LoadingSpinner;\n","/Users/hyunjunkim/Documents/Blog/client/src/Api/api.js",[],"/Users/hyunjunkim/Documents/Blog/client/src/redux/reducers/realtimeReducer.js",["278","279","280","281","282","283"],"/// 실시간 정보\n\nimport {\n    GET_MARKET_SUCCESS,\n    GET_REAL_TIME_DATA_FAILURE,\n    GET_REAL_TIME_DATA_REQUEST,\n    GET_REAL_TIME_DATA_SUCCESS,\n    GET_REALTIME_DATA,\n    GET_REALTIME_DATA_SUCCESS,\n    GET_REALTIME_DATA_ERROR,\n    GET_MARKET_REQUEST,\n    GET_MARKET_FAILURE,\n    GET_MARKETCAP_REQUEST,\n    GET_MARKETCAP_SUCCESS,\n    GET_MARKETCAP_FAILURE,\n} from \"../types\";\n\nconst initialState = {\n    market: {\n        isLoad: false,\n        data: null,\n        error: null,\n    },\n    realtimeData: {\n        isLoad: false,\n        data: null,\n        error: null,\n    },\n    marketCap: {\n        isLoad: false,\n        data: null,\n        error: null,\n    },\n};\n\n// 로딩중 상태\nconst loadingState = {\n    isLoad: true,\n    data: null,\n    error: null,\n};\n\n// 성공시 상태\nconst success = data => ({\n    isLoad: false,\n    data,\n    error: null,\n});\n\n// 실패시 상태\nconst error = error => ({\n    isLoad: false,\n    data: null,\n    error: error,\n});\n// 실시간 정보 저장\nconst saveRealtimeData = (realtimeData, data) => ({\n    isLoad: false,\n    data: (function () {\n        if (realtimeData.data) {\n            if (!realtimeData.data.map(list => list.code).includes(data.code)) {\n                return realtimeData.data.concat(data);\n            } else {\n                return realtimeData.data\n                    .filter(list => list.code !== data.code)\n                    .concat(data);\n            }\n        } else {\n            const tempArr = [];\n            realtimeData.data = tempArr.concat(data);\n            return realtimeData.data;\n        }\n    })(),\n    error: null,\n});\n\nconst realtimeReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_MARKET_SUCCESS:\n            return {\n                ...state,\n                market: action.data,\n            };\n        case GET_REALTIME_DATA:\n            return {\n                ...state,\n                realtimeData: loadingState,\n            };\n        case GET_REALTIME_DATA_SUCCESS:\n            return {\n                ...state,\n                realtimeData: saveRealtimeData(state.realtimeData, action.data),\n            };\n        case GET_REALTIME_DATA_ERROR:\n            return {\n                ...state,\n                realtimeData: error(action.error),\n            };\n        case GET_MARKETCAP_REQUEST:\n            return {\n                ...state,\n                marketCap: loadingState,\n            };\n        case GET_MARKETCAP_SUCCESS:\n            return {\n                ...state,\n                marketCap: {\n                    isLoad: false,\n                    data: action.data,\n                    error: null,\n                },\n            };\n        case GET_MARKETCAP_FAILURE:\n            return {\n                ...state,\n                marketCap: error,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default realtimeReducer;\n","/Users/hyunjunkim/Documents/Blog/client/src/redux/sagas/realtimeSaga.js",["284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302"],"import axios from \"axios\";\nimport {\n    all,\n    call,\n    fork,\n    put,\n    takeEvery,\n    select,\n    flush,\n    delay,\n    take,\n} from \"redux-saga/effects\";\nimport { buffers, eventChannel, END } from \"redux-saga\";\nimport { push } from \"connected-react-router\";\nimport {\n    GET_MARKET_SUCCESS,\n    GET_REAL_TIME_DATA_FAILURE,\n    GET_REAL_TIME_DATA_REQUEST,\n    GET_REAL_TIME_DATA_SUCCESS,\n    GET_REALTIME_DATA_SUCCESS,\n    GET_REALTIME_DATA_ERROR,\n    GET_REALTIME_DATA,\n    GET_MARKETCAP_SUCCESS,\n} from \"../types\";\nconst realTimeApi = () => {\n    return axios.get(\"https://api.upbit.com/v1/market/all\");\n};\nconst connectSocekt = (ws, marketList) => {\n    return eventChannel(emit => {\n        ws.onopen = () => {\n            ws.send(\n                `[{\"ticket\":\"test\"},{\"type\":\"ticker\",\"codes\": ${JSON.stringify(\n                    marketList\n                )}}]`\n            );\n        };\n\n        ws.onmessage = async evt => {\n            const { data } = evt;\n            const text = await new Response(data).text();\n            const information = JSON.parse(text);\n            // console.log(information);\n            emit(information);\n        };\n\n        ws.onerror = evt => {\n            emit(evt);\n            emit(END);\n        };\n\n        const unsubscribe = () => {\n            ws.close();\n        };\n\n        return unsubscribe;\n    }, buffers.expanding(500) || buffers.none());\n};\n\n// function* realTime() {\n//     try {\n//         const result = yield call(realTimeApi);\n//         const ws = new WebSocket(\"wss://api.upbit.com/websocket/v1\");\n//         const marketList = result.data\n//             .filter(list => list.market.includes(\"KRW-\"))\n//             .map(list => list.market);\n//         const api = yield call(connectSocekt, ws, marketList);\n//         yield put({\n//             type: GET_MARKET_SUCCESS,\n//             data: result.data,\n//         });\n//         while (true) {\n//             const datas = yield flush(api);\n//             if (datas.length) {\n//                 const sortedObj = {};\n//                 datas.forEach(data => {\n//                     if (sortedObj[data.code]) {\n//                         // 버퍼에 있는 데이터중 시간이 가장 최근인 데이터만 남김\n//                         sortedObj[data.code] =\n//                             sortedObj[data.code].timestamp > data.timestamp\n//                                 ? sortedObj[data.code]\n//                                 : data;\n//                     } else {\n//                         sortedObj[data.code] = data; // 새로운 데이터면 그냥 넣음\n//                     }\n//                 });\n\n//                 const sortedData = Object.keys(sortedObj).map(\n//                     data => sortedObj[data]\n//                 );\n//                 yield put({\n//                     type: GET_REAL_TIME_DATA_SUCCESS,\n//                     data: sortedData,\n//                 });\n//                 // console.log(sortedData);\n//             }\n//             yield delay(500); // 500ms 동안 대기\n//         }\n//     } catch (e) {\n//         console.log(e);\n//     }\n// }\nexport async function getMarket(dispatch) {\n    try {\n        // 마켓 가져오기 중\n        const response = await axios.get(\"https://api.upbit.com/v1/market/all\");\n        dispatch({\n            type: \"GET_MARKET_SUCCESS\",\n            data: response.data,\n        });\n\n        // 마켓 리스트를 추출하여 웹소켓 실행\n        const marketList = response.data\n            .filter(list => list.market.includes(\"KRW-\"))\n            .map(list => list.market);\n        const ws = new WebSocket(\"wss://api.upbit.com/websocket/v1\");\n        ws.onopen = () => {\n            // 웹소켓 연결\n            dispatch({\n                type: \"GET_REALTIME_DATA\",\n            });\n            ws.send(\n                `[{\"ticket\":\"test\"},{\"type\":\"ticker\",\"codes\": ${JSON.stringify(\n                    marketList\n                )}}]`\n            );\n        };\n        ws.onmessage = async e => {\n            // 실시간 데이터 수신\n            const { data } = e;\n            const text = await new Response(data).text();\n\n            // console.log(JSON.parse(text));\n            dispatch({\n                type: \"GET_REALTIME_DATA_SUCCESS\",\n                data: JSON.parse(text),\n            });\n        };\n        ws.onerror = e => {\n            // 실시간 데이터 수신 에러\n            dispatch({\n                type: \"GET_REALTIME_DATA_ERROR\",\n                error: e,\n            });\n        };\n    } catch (e) {\n        // 마켓 가져오기 실패\n        dispatch({\n            type: \"GET_MARKET_ERROR\",\n            error: e,\n        });\n    }\n}\n\nexport async function coinMarketCap(dispatch) {\n    try {\n        const response = await axios.get(\n            \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false&price_change_percentage=7d,30d,1y\"\n            // \"https://crix-api-cdn.upbit.com/v1/crix/marketcap?currency=KRW\"\n        );\n        console.log(response);\n        dispatch({\n            type: GET_MARKETCAP_SUCCESS,\n            data: response.data,\n        });\n    } catch (e) {\n        console.log(e);\n    }\n}\n\n// function* watchRealtimeData() {\n//     yield takeEvery(GET_REAL_TIME_DATA_REQUEST, realTime);\n// }\n// //----------------------------------\n\n// export default function* realtimeSaga() {\n//     yield all([fork(watchRealtimeData)]);\n// }\n","/Users/hyunjunkim/Documents/Blog/client/src/routes/normalRoute/News.js",[],"/Users/hyunjunkim/Documents/Blog/client/src/routes/normalRoute/Chart.js",["303","304"],"/Users/hyunjunkim/Documents/Blog/client/src/routes/normalRoute/ChartCoinList.js",["305"],"import React, { useCallback } from \"react\";\n\nconst ChartCoinList = ({ data, name }) => {\n    const {\n        code,\n        trade_price,\n        change_rate,\n        acc_trade_price_24h,\n        change,\n        change_price,\n    } = data;\n    // console.log(code);\n    // console.log(name);\n    const splitedName = code.split(\"-\")[1];\n    // console.log(splitedName);\n    const changeLiteral = useCallback(change => {\n        if (change === \"RISE\") {\n            return \"+\";\n        } else if (change === \"FALL\") {\n            return \"-\";\n        }\n        return \"\";\n    }, []);\n\n    const fixPrice = useCallback(price => {\n        // 가격 단위 조정 함수\n        return parseInt(price.toFixed(0)).toLocaleString();\n    }, []);\n    const sectionStyle = {\n        backgroundImage: `url(https://static.upbit.com/logos/${splitedName}.png)`,\n    };\n    return (\n        <div className=\"coin_list\">\n            <div className=\"coin_list_name\">\n                <div className=\"coinImg\" style={sectionStyle}></div>\n                <div className=\"coin_list_name_children\">\n                    <p className=\"pTagbold\">{name}</p>\n                    <span className=\"semiCode\">{code}</span>\n                </div>\n            </div>\n            <div className={`coin_list_price ${change}`}>\n                <div>{trade_price.toLocaleString()}</div>\n            </div>\n            <div className={`coin_list_change ${change}`}>\n                <p>{`${changeLiteral(change)} ${(change_rate * 100).toFixed(\n                    2\n                )}%`}</p>\n                <span className=\"semiPrice\">{change_price}</span>\n            </div>\n            <div className=\"coin_list_volume\">\n                <div>\n                    {parseInt(\n                        (acc_trade_price_24h * 0.000001).toFixed(0)\n                    ).toLocaleString()}\n                    <span>백만</span>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default React.memo(ChartCoinList);\n","/Users/hyunjunkim/Documents/Blog/client/src/routes/normalRoute/ChartCoinMarketCap.js",["306","307"],"import React, { useCallback } from \"react\";\n\nconst ChartCoinMarketCap = ({ data }) => {\n    // console.log(\"데이타\", data);\n    const name = data.name + \"  \" + data.symbol;\n    const marketCap = Math.ceil(data.market_cap);\n    const img = data.symbol;\n    const weekCh = Math.ceil(data.price_change_percentage_7d_in_currency) + \"%\";\n    const monthCh =\n        Math.ceil(data.price_change_percentage_30d_in_currency) + \"%\";\n    const yearCh = Math.ceil(data.price_change_percentage_1y_in_currency) + \"%\";\n\n    const numberToKorean = useCallback(number => {\n        var inputNumber = number < 0 ? false : number;\n        var unitWords = [\"\", \"만\", \"억\", \"조\", \"경\"];\n        var splitUnit = 10000;\n        var splitCount = unitWords.length;\n        var resultArray = [];\n        var resultString = \"\";\n\n        for (var i = 0; i < splitCount; i++) {\n            var unitResult =\n                (inputNumber % Math.pow(splitUnit, i + 1)) /\n                Math.pow(splitUnit, i);\n            unitResult = Math.floor(unitResult);\n            if (unitResult > 0) {\n                resultArray[i] = unitResult;\n            }\n        }\n\n        for (var i = 0; i < resultArray.length; i++) {\n            if (!resultArray[i]) continue;\n            resultString =\n                String(resultArray[i]) + unitWords[i] + \" \" + resultString;\n        }\n        const firstChar = resultString.indexOf(\"억\");\n        return resultString.slice(0, firstChar + 1);\n    }, []);\n    const sectionStyle = {\n        backgroundImage: `url(${data.image})`,\n    };\n    return (\n        <div className=\"marketCap_listItem\">\n            <div className=\"marketCap_listItem_order\">\n                {data.market_cap_rank}\n            </div>\n            <div className=\"marketCap_listItem_name\">\n                <div\n                    className=\"marketCap_listItem_img\"\n                    style={sectionStyle}\n                ></div>\n                <div className=\"marketCap_listItem_symbol\">\n                    <div className=\"marketCap_listItem_symbol_child\">\n                        {name}\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"marketCap_listItem_7d\">{weekCh}</div>\n            <div className=\"marketCap_listItem_30d\">{monthCh}</div>\n            <div className=\"marketCap_listItem_1y\">{yearCh}</div>\n            <div className=\"marketCap_listItem_MarketCap\">\n                {numberToKorean(marketCap * 1107.31)}\n            </div>\n        </div>\n    );\n};\n\nexport default React.memo(ChartCoinMarketCap);\n",{"ruleId":"308","severity":1,"message":"309","line":8,"column":10,"nodeType":"310","messageId":"311","endLine":8,"endColumn":17},{"ruleId":"312","replacedBy":"313"},{"ruleId":"314","replacedBy":"315"},{"ruleId":"308","severity":1,"message":"316","line":1,"column":17,"nodeType":"310","messageId":"311","endLine":1,"endColumn":26},{"ruleId":"308","severity":1,"message":"317","line":2,"column":20,"nodeType":"310","messageId":"311","endLine":2,"endColumn":31},{"ruleId":"308","severity":1,"message":"318","line":2,"column":33,"nodeType":"310","messageId":"311","endLine":2,"endColumn":44},{"ruleId":"319","severity":1,"message":"320","line":30,"column":1,"nodeType":"321","messageId":"322","endLine":39,"endColumn":2},{"ruleId":"308","severity":1,"message":"323","line":1,"column":17,"nodeType":"310","messageId":"311","endLine":1,"endColumn":25},{"ruleId":"308","severity":1,"message":"324","line":4,"column":8,"nodeType":"310","messageId":"311","endLine":4,"endColumn":17},{"ruleId":"308","severity":1,"message":"325","line":19,"column":18,"nodeType":"310","messageId":"311","endLine":19,"endColumn":22},{"ruleId":"308","severity":1,"message":"326","line":19,"column":36,"nodeType":"310","messageId":"311","endLine":19,"endColumn":39},{"ruleId":"327","severity":1,"message":"328","line":34,"column":8,"nodeType":"329","endLine":34,"endColumn":10,"suggestions":"330"},{"ruleId":"308","severity":1,"message":"331","line":36,"column":22,"nodeType":"310","messageId":"311","endLine":36,"endColumn":28},{"ruleId":"308","severity":1,"message":"332","line":38,"column":12,"nodeType":"310","messageId":"311","endLine":38,"endColumn":18},{"ruleId":"308","severity":1,"message":"333","line":42,"column":11,"nodeType":"310","messageId":"311","endLine":42,"endColumn":19},{"ruleId":"334","severity":1,"message":"335","line":22,"column":21,"nodeType":"336","endLine":22,"endColumn":79},{"ruleId":"312","replacedBy":"337"},{"ruleId":"314","replacedBy":"338"},{"ruleId":"308","severity":1,"message":"339","line":3,"column":5,"nodeType":"310","messageId":"311","endLine":3,"endColumn":14},{"ruleId":"308","severity":1,"message":"340","line":4,"column":5,"nodeType":"310","messageId":"311","endLine":4,"endColumn":11},{"ruleId":"308","severity":1,"message":"341","line":5,"column":5,"nodeType":"310","messageId":"311","endLine":5,"endColumn":18},{"ruleId":"308","severity":1,"message":"342","line":6,"column":5,"nodeType":"310","messageId":"311","endLine":6,"endColumn":13},{"ruleId":"308","severity":1,"message":"343","line":7,"column":5,"nodeType":"310","messageId":"311","endLine":7,"endColumn":8},{"ruleId":"308","severity":1,"message":"344","line":17,"column":8,"nodeType":"310","messageId":"311","endLine":17,"endColumn":19},{"ruleId":"308","severity":1,"message":"345","line":21,"column":13,"nodeType":"310","messageId":"311","endLine":21,"endColumn":28},{"ruleId":"308","severity":1,"message":"346","line":37,"column":11,"nodeType":"310","messageId":"311","endLine":37,"endColumn":23},{"ruleId":"308","severity":1,"message":"347","line":43,"column":11,"nodeType":"310","messageId":"311","endLine":43,"endColumn":19},{"ruleId":"308","severity":1,"message":"348","line":94,"column":11,"nodeType":"310","messageId":"311","endLine":94,"endColumn":20},{"ruleId":"308","severity":1,"message":"349","line":17,"column":10,"nodeType":"310","messageId":"311","endLine":17,"endColumn":16},{"ruleId":"308","severity":1,"message":"325","line":17,"column":18,"nodeType":"310","messageId":"311","endLine":17,"endColumn":22},{"ruleId":"308","severity":1,"message":"350","line":21,"column":22,"nodeType":"310","messageId":"311","endLine":21,"endColumn":33},{"ruleId":"308","severity":1,"message":"351","line":9,"column":15,"nodeType":"310","messageId":"311","endLine":9,"endColumn":18},{"ruleId":"308","severity":1,"message":"339","line":9,"column":20,"nodeType":"310","messageId":"311","endLine":9,"endColumn":29},{"ruleId":"308","severity":1,"message":"352","line":13,"column":10,"nodeType":"310","messageId":"311","endLine":13,"endColumn":25},{"ruleId":"308","severity":1,"message":"353","line":15,"column":5,"nodeType":"310","messageId":"311","endLine":15,"endColumn":16},{"ruleId":"308","severity":1,"message":"354","line":16,"column":5,"nodeType":"310","messageId":"311","endLine":16,"endColumn":18},{"ruleId":"308","severity":1,"message":"355","line":17,"column":5,"nodeType":"310","messageId":"311","endLine":17,"endColumn":12},{"ruleId":"308","severity":1,"message":"356","line":21,"column":8,"nodeType":"310","messageId":"311","endLine":21,"endColumn":16},{"ruleId":"308","severity":1,"message":"357","line":22,"column":10,"nodeType":"310","messageId":"311","endLine":22,"endColumn":16},{"ruleId":"308","severity":1,"message":"358","line":26,"column":25,"nodeType":"310","messageId":"311","endLine":26,"endColumn":34},{"ruleId":"308","severity":1,"message":"359","line":30,"column":13,"nodeType":"310","messageId":"311","endLine":30,"endColumn":19},{"ruleId":"308","severity":1,"message":"360","line":30,"column":21,"nodeType":"310","messageId":"311","endLine":30,"endColumn":29},{"ruleId":"308","severity":1,"message":"361","line":31,"column":13,"nodeType":"310","messageId":"311","endLine":31,"endColumn":21},{"ruleId":"308","severity":1,"message":"362","line":2,"column":10,"nodeType":"310","messageId":"311","endLine":2,"endColumn":13},{"ruleId":"308","severity":1,"message":"363","line":2,"column":15,"nodeType":"310","messageId":"311","endLine":2,"endColumn":22},{"ruleId":"308","severity":1,"message":"352","line":2,"column":10,"nodeType":"310","messageId":"311","endLine":2,"endColumn":25},{"ruleId":"308","severity":1,"message":"355","line":3,"column":10,"nodeType":"310","messageId":"311","endLine":3,"endColumn":17},{"ruleId":"308","severity":1,"message":"357","line":14,"column":20,"nodeType":"310","messageId":"311","endLine":14,"endColumn":26},{"ruleId":"308","severity":1,"message":"364","line":1,"column":17,"nodeType":"310","messageId":"311","endLine":1,"endColumn":25},{"ruleId":"308","severity":1,"message":"365","line":3,"column":10,"nodeType":"310","messageId":"311","endLine":3,"endColumn":15},{"ruleId":"308","severity":1,"message":"357","line":3,"column":17,"nodeType":"310","messageId":"311","endLine":3,"endColumn":23},{"ruleId":"308","severity":1,"message":"366","line":12,"column":11,"nodeType":"310","messageId":"311","endLine":12,"endColumn":19},{"ruleId":"308","severity":1,"message":"367","line":20,"column":11,"nodeType":"310","messageId":"311","endLine":20,"endColumn":19},{"ruleId":"308","severity":1,"message":"368","line":36,"column":11,"nodeType":"310","messageId":"311","endLine":36,"endColumn":17},{"ruleId":"308","severity":1,"message":"325","line":2,"column":18,"nodeType":"310","messageId":"311","endLine":2,"endColumn":22},{"ruleId":"308","severity":1,"message":"369","line":3,"column":10,"nodeType":"310","messageId":"311","endLine":3,"endColumn":14},{"ruleId":"308","severity":1,"message":"370","line":6,"column":8,"nodeType":"310","messageId":"311","endLine":6,"endColumn":14},{"ruleId":"308","severity":1,"message":"371","line":7,"column":8,"nodeType":"310","messageId":"311","endLine":7,"endColumn":14},{"ruleId":"308","severity":1,"message":"324","line":8,"column":8,"nodeType":"310","messageId":"311","endLine":8,"endColumn":17},{"ruleId":"308","severity":1,"message":"372","line":1,"column":17,"nodeType":"310","messageId":"311","endLine":1,"endColumn":28},{"ruleId":"308","severity":1,"message":"373","line":13,"column":5,"nodeType":"310","messageId":"311","endLine":13,"endColumn":12},{"ruleId":"308","severity":1,"message":"374","line":30,"column":21,"nodeType":"310","messageId":"311","endLine":30,"endColumn":28},{"ruleId":"308","severity":1,"message":"331","line":30,"column":30,"nodeType":"310","messageId":"311","endLine":30,"endColumn":36},{"ruleId":"308","severity":1,"message":"372","line":1,"column":17,"nodeType":"310","messageId":"311","endLine":1,"endColumn":28},{"ruleId":"308","severity":1,"message":"351","line":3,"column":10,"nodeType":"310","messageId":"311","endLine":3,"endColumn":13},{"ruleId":"308","severity":1,"message":"375","line":4,"column":27,"nodeType":"310","messageId":"311","endLine":4,"endColumn":41},{"ruleId":"308","severity":1,"message":"373","line":13,"column":5,"nodeType":"310","messageId":"311","endLine":13,"endColumn":12},{"ruleId":"308","severity":1,"message":"365","line":24,"column":10,"nodeType":"310","messageId":"311","endLine":24,"endColumn":15},{"ruleId":"308","severity":1,"message":"374","line":30,"column":21,"nodeType":"310","messageId":"311","endLine":30,"endColumn":28},{"ruleId":"308","severity":1,"message":"331","line":30,"column":30,"nodeType":"310","messageId":"311","endLine":30,"endColumn":36},{"ruleId":"308","severity":1,"message":"376","line":87,"column":11,"nodeType":"310","messageId":"311","endLine":87,"endColumn":17},{"ruleId":"308","severity":1,"message":"377","line":2,"column":16,"nodeType":"310","messageId":"311","endLine":2,"endColumn":21},{"ruleId":"308","severity":1,"message":"378","line":5,"column":5,"nodeType":"310","messageId":"311","endLine":5,"endColumn":31},{"ruleId":"308","severity":1,"message":"379","line":6,"column":5,"nodeType":"310","messageId":"311","endLine":6,"endColumn":31},{"ruleId":"308","severity":1,"message":"380","line":7,"column":5,"nodeType":"310","messageId":"311","endLine":7,"endColumn":31},{"ruleId":"308","severity":1,"message":"381","line":11,"column":5,"nodeType":"310","messageId":"311","endLine":11,"endColumn":23},{"ruleId":"308","severity":1,"message":"382","line":12,"column":5,"nodeType":"310","messageId":"311","endLine":12,"endColumn":23},{"ruleId":"308","severity":1,"message":"383","line":44,"column":7,"nodeType":"310","messageId":"311","endLine":44,"endColumn":14},{"ruleId":"308","severity":1,"message":"384","line":3,"column":5,"nodeType":"310","messageId":"311","endLine":3,"endColumn":8},{"ruleId":"308","severity":1,"message":"385","line":4,"column":5,"nodeType":"310","messageId":"311","endLine":4,"endColumn":9},{"ruleId":"308","severity":1,"message":"386","line":5,"column":5,"nodeType":"310","messageId":"311","endLine":5,"endColumn":9},{"ruleId":"308","severity":1,"message":"387","line":6,"column":5,"nodeType":"310","messageId":"311","endLine":6,"endColumn":8},{"ruleId":"308","severity":1,"message":"388","line":7,"column":5,"nodeType":"310","messageId":"311","endLine":7,"endColumn":14},{"ruleId":"308","severity":1,"message":"389","line":8,"column":5,"nodeType":"310","messageId":"311","endLine":8,"endColumn":11},{"ruleId":"308","severity":1,"message":"390","line":9,"column":5,"nodeType":"310","messageId":"311","endLine":9,"endColumn":10},{"ruleId":"308","severity":1,"message":"391","line":10,"column":5,"nodeType":"310","messageId":"311","endLine":10,"endColumn":10},{"ruleId":"308","severity":1,"message":"392","line":11,"column":5,"nodeType":"310","messageId":"311","endLine":11,"endColumn":9},{"ruleId":"308","severity":1,"message":"393","line":14,"column":10,"nodeType":"310","messageId":"311","endLine":14,"endColumn":14},{"ruleId":"308","severity":1,"message":"394","line":16,"column":5,"nodeType":"310","messageId":"311","endLine":16,"endColumn":23},{"ruleId":"308","severity":1,"message":"378","line":17,"column":5,"nodeType":"310","messageId":"311","endLine":17,"endColumn":31},{"ruleId":"308","severity":1,"message":"379","line":18,"column":5,"nodeType":"310","messageId":"311","endLine":18,"endColumn":31},{"ruleId":"308","severity":1,"message":"380","line":19,"column":5,"nodeType":"310","messageId":"311","endLine":19,"endColumn":31},{"ruleId":"308","severity":1,"message":"395","line":20,"column":5,"nodeType":"310","messageId":"311","endLine":20,"endColumn":30},{"ruleId":"308","severity":1,"message":"396","line":21,"column":5,"nodeType":"310","messageId":"311","endLine":21,"endColumn":28},{"ruleId":"308","severity":1,"message":"397","line":22,"column":5,"nodeType":"310","messageId":"311","endLine":22,"endColumn":22},{"ruleId":"308","severity":1,"message":"398","line":25,"column":7,"nodeType":"310","messageId":"311","endLine":25,"endColumn":18},{"ruleId":"308","severity":1,"message":"399","line":28,"column":7,"nodeType":"310","messageId":"311","endLine":28,"endColumn":20},{"ruleId":"308","severity":1,"message":"400","line":7,"column":8,"nodeType":"310","messageId":"311","endLine":7,"endColumn":15},{"ruleId":"327","severity":1,"message":"328","line":15,"column":8,"nodeType":"329","endLine":15,"endColumn":10,"suggestions":"401"},{"ruleId":"308","severity":1,"message":"402","line":25,"column":11,"nodeType":"310","messageId":"311","endLine":25,"endColumn":19},{"ruleId":"308","severity":1,"message":"403","line":7,"column":11,"nodeType":"310","messageId":"311","endLine":7,"endColumn":14},{"ruleId":"404","severity":1,"message":"405","line":31,"column":18,"nodeType":"310","messageId":"406","endLine":31,"endColumn":19},"no-unused-vars","'coinApi' is defined but never used.","Identifier","unusedVar","no-native-reassign",["407"],"no-negated-in-lhs",["408"],"'useEffect' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'Fragment' is defined but never used.","'AppNavbar' is defined but never used.","'Menu' is defined but never used.","'Tag' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["409"],"'Footer' is assigned a value but never used.","'isOpen' is assigned a value but never used.","'onLogout' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement",["407"],["408"],"'Container' is defined but never used.","'Navbar' is defined but never used.","'NavbarToggler' is defined but never used.","'Collapse' is defined but never used.","'Nav' is defined but never used.","'SearchInput' is defined but never used.","'isAuthenticated' is assigned a value but never used.","'handleToggle' is assigned a value but never used.","'authLink' is assigned a value but never used.","'guestLink' is assigned a value but never used.","'Layout' is defined but never used.","'setLocalMsg' is assigned a value but never used.","'Col' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'faPencilAlt' is defined but never used.","'faCommentDots' is defined but never used.","'faMouse' is defined but never used.","'Comments' is defined but never used.","'Button' is defined but never used.","'creatorId' is assigned a value but never used.","'userId' is assigned a value but never used.","'userName' is assigned a value but never used.","'comments' is assigned a value but never used.","'Row' is defined but never used.","'Spinner' is defined but never used.","'useState' is defined but never used.","'Badge' is defined but never used.","'onChange' is assigned a value but never used.","'onSubmit' is assigned a value but never used.","'suffix' is assigned a value but never used.","'Link' is defined but never used.","'Header' is defined but never used.","'Footer' is defined but never used.","'useCallback' is defined but never used.","'NavLink' is defined but never used.","'Content' is assigned a value but never used.","'SketchOutlined' is defined but never used.","'styler' is assigned a value but never used.","'Alert' is defined but never used.","'GET_REAL_TIME_DATA_FAILURE' is defined but never used.","'GET_REAL_TIME_DATA_REQUEST' is defined but never used.","'GET_REAL_TIME_DATA_SUCCESS' is defined but never used.","'GET_MARKET_REQUEST' is defined but never used.","'GET_MARKET_FAILURE' is defined but never used.","'success' is assigned a value but never used.","'all' is defined but never used.","'call' is defined but never used.","'fork' is defined but never used.","'put' is defined but never used.","'takeEvery' is defined but never used.","'select' is defined but never used.","'flush' is defined but never used.","'delay' is defined but never used.","'take' is defined but never used.","'push' is defined but never used.","'GET_MARKET_SUCCESS' is defined but never used.","'GET_REALTIME_DATA_SUCCESS' is defined but never used.","'GET_REALTIME_DATA_ERROR' is defined but never used.","'GET_REALTIME_DATA' is defined but never used.","'realTimeApi' is assigned a value but never used.","'connectSocekt' is assigned a value but never used.","'Marquee' is defined but never used.",["410"],"'fixPrice' is assigned a value but never used.","'img' is assigned a value but never used.","no-redeclare","'i' is already defined.","redeclared","no-global-assign","no-unsafe-negation",{"desc":"411","fix":"412"},{"desc":"411","fix":"413"},"Update the dependencies array to be: [dispatch]",{"range":"414","text":"415"},{"range":"416","text":"415"},[1295,1297],"[dispatch]",[557,559]]